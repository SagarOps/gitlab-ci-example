stages:
  - code-quality
  - dev-deploy

variables:
  DEPLOYMENT_PATH: $DEPLOYMENT_PATH
  
dev_deploy:
    stage: dev-deploy
    only:
        - dev
    before_script:
        - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
        - eval $(ssh-agent -s)
        - echo "$_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh
        - ssh-keyscan $_IP_ADDRESS >> ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts
    script:
      - ssh -o StrictHostKeyChecking=no $_SERVER_USER@$DEV_IP_ADDRESS "cd " $_DEPLOYMENT_PATH "; git stash; git pull origin development; npm install; nuxt cleanup; nuxt build; sudo pm2 restart ecosystem.config.js --name "handmerch";"
      # - ssh -o StrictHostKeyChecking=no $DEV_SERVER_USER@$DEV_IP_ADDRESS "cd " $DEV_DEPLOYMENT_PATH "; git stash; git pull origin development; npm install; nuxt cleanup; npm run generate;"

sonarqube-check:
  stage: code-quality
  image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - sonar-scanner
  allow_failure: true
  only:
    - dev # or the name of your main branch
